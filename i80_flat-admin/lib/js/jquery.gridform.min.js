/** jquery.gridform v0.4.1 | (c) Gunnar Thies, 2015 | MIT-License */
var gridform=gridform||{};(function($){gridform.forms={};gridform.types={};if($.when.all===undefined){$.when.all=function(deferreds){var deferred=new $.Deferred();$.when.apply($,deferreds).then(function(){deferred.resolve(Array.prototype.slice.call(arguments));},function(){deferred.fail(Array.prototype.slice.call(arguments));});return deferred;}}
gridform.form=function(settings){return this.init(settings);};gridform.form.prototype={settings:null,fieldsById:{},renderedAtTarget:null,rendered:null,fieldCount:null,hiddenFields:null,defaultSettings:{debug:false,mode:'edit',labelType:'inline',labelAlign:'right',showTooltipInstantly:false,tooltipOrientation:"bottom",successIsGreen:false,useFontAwesome:false,useICheck:false,markMandatoryFields:true,icon_success:'glyphicon glyphicon-ok',icon_error:'glyphicon glyphicon-remove',icon_warning:'glyphicon glyphicon-warning-sign',icon_waiting:'glyphicon glyphicon-refresh',language:{'mandatoryField':'This is a mandatory field','loading':'Loading ...','selectPlaceholder':'-',},dimensions:{},},init:function(userSettings){this.settings=$.extend({},this.defaultSettings,userSettings);if(this.settings.useICheck!==false){for(var x in this.settings.fields){var type=this.settings.fields[x]['type'];if(type=="checkbox"||type=="boolean"||type=="radio"){this.settings.fields[x]['type']="i"+type;}}}else{for(var x in this.settings.fields){var type=this.settings.fields[x]['type'];if(type=="icheckbox"||type=="iboolean"||type=="iradio"){this.settings.fields[x]['type']=type.substr(1);}}}
return this;},render:function(target,debugOptions){this.fieldCount=0;this.rendered=0;this.fieldsById={};this.hiddenFields={};if(typeof target==="object"){if(target.selector===undefined)
return false;else
target=target.selector;}
if(target!==undefined&&$(target).length!==1)
return false;this.settings.target=(target!==undefined)?target:this.settings.target;if($(this.settings.target).length!==1)
return false;$(this.renderedAtTarget).html("");this.rendered+=1;this.renderedAtTarget=this.settings.target;var html=this.__buildTable(debugOptions);$(this.settings.target).html(html);this.__buildContents(debugOptions);this.setData(this.settings.record);$(gridform.forms[this.settings.name]).trigger("rendered",[{'rendered':this.rendered}]);return this;},__buildTable:function(debugOptions){this.cols=0;this.rows=0;var fields={};this.focusOnField=null;for(var x in this.settings.fields){var splitting=x.split("_");var r=parseInt(splitting[0],10);var c=parseInt(splitting[1],10);if(isNaN(c)||isNaN(r)){console.error("The field "+this.settings.fields[x].id+" is missing correct row and col parameter!");continue;}
this.cols=(c>this.cols)?c:this.cols;this.rows=(r>this.rows)?r:this.rows;this.settings.fields[x].row=r;this.settings.fields[x].col=c;if(this.fieldsById[this.settings.fields[x].id]!==undefined){console.error("The id '"+this.settings.fields[x].id+"' is already taken, the field is deleted from the grid!");delete this.settings.fields[x];}else{this.fieldsById[this.settings.fields[x].id]=this.settings.fields[x];if(this.settings.fields[x].hasFocus===true){if(this.focusOnField===null){this.focusOnField=this.settings.fields[x].id;}else{console.error("Focus is already configured for field '"+this.focusOnField+"'.");}}
if(gridform.types[this.settings.fields[x].type]!==undefined&&gridform.types[this.settings.fields[x].type].containsData===true){this.fieldCount++;}}}
var spannedCells={};var showCellNames=false;if(debugOptions!==undefined&&debugOptions.showCellNames===true){showCellNames=true;}
var labelAlign='left';if(this.settings.labelAlign==="right"){labelAlign="right";}else if(this.settings.labelAlign==="left"){labelAlign="left";}
var debugClass=(showCellNames)?'gridformDebug':'';var html='<table class="gridform '+debugClass+'" border=0><tbody>';if(this.settings.labelType==="inline"){html+='<tr class="'+debugClass+'">';for(var c=1;c<=this.cols;c++){var labelWidth='';var contentWidth='';if(this.settings.dimensions['col_'+c]!==undefined){labelWidth=(this.settings.dimensions['col_'+c].labelWidth!==undefined)?'width:'+this.settings.dimensions['col_'+c].labelWidth:'';contentWidth=(this.settings.dimensions['col_'+c].contentWidth!==undefined)?'width:'+this.settings.dimensions['col_'+c].contentWidth:'';}
html+='<td class="'+debugClass+'" style="'+labelWidth+'"></td>';html+='<td class="'+debugClass+'" style="'+contentWidth+'"></td>';}
html+='</tr>';for(var r=1;r<=this.rows;r++){html+='<tr>';for(var c=1;c<=this.cols;c++){var rc=r+'_'+c;if(this.settings.fields[rc]===undefined){if(spannedCells[rc]!==undefined){continue;}
html+='<td data-id="'+rc+'" class="gridform_content '+debugClass+'" colspan="2">';if(showCellNames)html+=rc;html+='</td>';}else{if(spannedCells[rc]!==undefined){console.error("The field '"+this.settings.fields[rc].id+"' cannot be placed at '"+rc+"'. This cell is colspanned by field '"+spannedCells[rc]+"'");continue;}
var colspan=1;if(this.settings.fields[rc].colspan!==undefined){colspan=parseInt(this.settings.fields[rc].colspan,10);}
var rowspan=1;if(this.settings.fields[rc].rowspan!==undefined){rowspan=parseInt(this.settings.fields[rc].rowspan,10);}
for(var x=r;x<(r+rowspan);x++){for(var y=c;y<c+colspan;y++){if(this.settings.debug)console.log("The cell "+x+'_'+y+" is filled by field '"+this.settings.fields[rc].id+"'");spannedCells[x+'_'+y]=this.settings.fields[rc].id;}}
colspan=(colspan*2)-1;var labelAllowed=(gridform.types[this.settings.fields[rc].type]!==undefined&&gridform.types[this.settings.fields[rc].type].labelAllowed===false)?false:true;if(this.settings.fields[rc].label===undefined||labelAllowed===false){colspan++;html+='<td data-id="'+rc+'" class="gridform_content '+debugClass+'" colspan="'+colspan+'" rowspan="'+rowspan+'">';if(showCellNames)html+=rc+' '+this.settings.fields[rc].label;html+='</td>';}else{html+='<td data-id="'+rc+'" class="gridform_label '+debugClass+'" style="text-align:'+labelAlign+';" rowspan="'+rowspan+'">';if(showCellNames)
html+='<small>'+rc+': '+this.settings.fields[rc].label+'</small>';html+='</td>';html+='<td data-id="'+rc+'" class="gridform_content '+debugClass+'" style="height:100%;vertical-align:top;" colspan="'+colspan+'" rowspan="'+rowspan+'">';if(showCellNames)
html+='<small>'+rc+': field '+this.settings.fields[rc].id+'</small>';html+='</td>';}}}
html+='</tr>';}}else if(this.settings.labelType==="over"){html+='<tr class="'+debugClass+'">';for(var c=1;c<=this.cols;c++){var contentWidth='';if(this.settings.dimensions['col_'+c]!==undefined){contentWidth=(this.settings.dimensions['col_'+c].contentWidth!==undefined)?'width:'+this.settings.dimensions['col_'+c].contentWidth:'';}
html+='<td class="'+debugClass+'" style="'+contentWidth+'"></td>';}
html+='</tr>';for(var r=1;r<=this.rows;r++){html+='<tr class="'+debugClass+'">';for(var c=1;c<=this.cols;c++){var rc=r+'_'+c;if(this.settings.fields[rc]===undefined){if(spannedCells[rc]!==undefined){continue;}
html+='<td data-id="'+rc+'" class="gridform_content '+debugClass+'" rowspan="2">';if(showCellNames)
html+=rc;html+='</td>';}else{if(spannedCells[rc]!==undefined){console.error("The field '"+this.settings.fields[rc].id+"' cannot be placed at '"+rc+"'. This cell is filled by field '"+spannedCells[rc].id+"'");continue;}
var colspan=1;if(this.settings.fields[rc].colspan!==undefined){colspan=parseInt(this.settings.fields[rc].colspan,10);}
var rowspan=1;if(this.settings.fields[rc].rowspan!==undefined){rowspan=parseInt(this.settings.fields[rc].rowspan,10);}
for(var x=r;x<(r+rowspan);x++){for(var y=c;y<c+colspan;y++){if(this.settings.debug)console.log("The cell "+x+'_'+y+" is filled by field content '"+this.settings.fields[rc].id+"'");spannedCells[x+'_'+y]=this.settings.fields[rc];}}
var labelAllowed=(gridform.types[this.settings.fields[rc].type]!==undefined&&gridform.types[this.settings.fields[rc].type].labelAllowed===false)?false:true;if(this.settings.fields[rc].label===undefined||labelAllowed===false){html+='<td data-id="'+rc+'" class="gridform_content '+debugClass+'" colspan="'+colspan+'" rowspan="'+(rowspan*2)+'">';if(showCellNames)
html+=rc;html+='</td>';}else{html+='<td data-id="'+rc+'" class="gridform_label '+debugClass+'" style="text-align:'+labelAlign+';" colspan="'+colspan+'">';if(showCellNames)
html+='<small>'+rc+': '+this.settings.fields[rc].label+'</small>';html+='</td>';}}}
html+='</tr>';html+='<tr class="'+debugClass+'">';for(var c=1;c<=this.cols;c++){var rc=r+'_'+c;if(this.settings.fields[rc]!==undefined){if(spannedCells[rc]!==undefined&&this.settings.fields[rc]!==spannedCells[rc]){console.error("The field '"+this.settings.fields[rc].id+"' cannot be placed at '"+rc+"'. This cell is filled by field '"+spannedCells[rc].id+"'");continue;}
var labelAllowed=(gridform.types[this.settings.fields[rc].type]!==undefined&&gridform.types[this.settings.fields[rc].type].labelAllowed===false)?false:true;if(this.settings.fields[rc].label!==undefined&&labelAllowed===true){var colspan=1;if(this.settings.fields[rc].colspan!==undefined){colspan=parseInt(this.settings.fields[rc].colspan,10);}
var rowspan=1;if(this.settings.fields[rc].rowspan!==undefined){rowspan=parseInt(this.settings.fields[rc].rowspan,10);}
html+='<td data-id="'+rc+'" class="gridform_content '+debugClass+'" style="height:100%;vertical-align:top;" colspan="'+colspan+'" rowspan="'+((rowspan*2)-1)+'">';if(showCellNames)
html+='<small>'+rc+': field '+this.settings.fields[rc].id+'</small>';html+='</td>';}}}
html+='</tr>';}}
html+='</tbody></table>';return html;},__buildContents:function(debugOptions){if(debugOptions!==undefined&&debugOptions.showCellNames===true){return;}
for(var x in this.settings.fields){var type=this.settings.fields[x].type;var field=this.settings.fields[x];var cellSelectorLabel=this.settings.target+' td[data-id='+x+'].gridform_label';var cellSelectorContent=this.settings.target+' td[data-id='+x+'].gridform_content';if(gridform.types[type]==undefined){console.error("No type "+type+" is known?!");}
if(gridform.types[type]!==undefined&&typeof gridform.types[type]['setLabel']==="function"){var html=gridform.types[type]['setLabel'](field,cellSelectorLabel,this);if(typeof html==="string"){$(cellSelectorLabel).html(html);}}else{console.error("No setLabel function for type "+type);}
if(gridform.types[type]!==undefined&&typeof gridform.types[type]['render']==="function"){var html=gridform.types[type]['render'](field,cellSelectorContent,this);if(typeof html==="string"){$(cellSelectorContent).html(html);}}else{console.error("No rendering function for type "+type);}
if(this.focusOnField!==null){this.getElement(this.focusOnField).focus();}
if(gridform.types[type]!==undefined&&typeof gridform.types[type]['afterDOMCreation']==="function"){gridform.types[type]['afterDOMCreation'](field,cellSelectorContent,this);}
var that=this;if(field.validateOnBlur===true&&(field.mandatory===true||typeof field.validate==="function")){var elem=this.getElement(field.id);(function(id){elem.on("blur",function(){that.validate(id);});})(field.id);}}
for(var x in this.settings.hiddenFields){if(this.fieldsById[this.settings.hiddenFields[x].id]!==undefined){console.error("The id '"+this.settings.hiddenFields[x].id+"' is already taken, the hidden field is deleted from the grid!");delete this.settings.hiddenFields[x];continue;}
var id=this.settings.hiddenFields[x].id;if(this.settings.hiddenFields[x].value!==undefined){this.hiddenFields[id]=this.settings.hiddenFields[x].value;}else{this.hiddenFields[id]=null;}}},setData:function(record){for(var x in record){if(this.fieldsById[x]!==undefined){var type=this.fieldsById[x].type;var field=this.fieldsById[x];var cellSelector=this.settings.target+' td[data-id='+field.row+'_'+field.col+'].gridform_content';if(gridform.types[type]!==undefined&&typeof gridform.types[type]['set']==="function"){gridform.types[type]['set'](this.fieldsById[x],record[x],cellSelector,this);}else{console.error("No set function for type "+type);}}else if(this.hiddenFields[x]!==undefined){this.hiddenFields[x]=record[x];}else{console.error("No field with id "+x+", so I can set the data!");}}},switchMode:function(mode){if(mode!=="edit"&&mode!=="view")
return false;if(mode!==this.mode){this.settings.mode=mode;this.render();}},getElement:function(id){var field=this.fieldsById[id];if(field===undefined)
return false;var cellSelectorContent=this.settings.target+' td[data-id='+field.row+'_'+field.col+'].gridform_content';if(gridform.types[field.type]!==undefined&&typeof gridform.types[field.type]['getFieldNode']==="function"){return gridform.types[field.type]['getFieldNode'](field,cellSelectorContent,this);}else{if(this.settings.debug)console.log("getElement: No getFieldNode-Method for field type "+field.type);return false;}},setStatus:function(id,type,message){var field=this.fieldsById[id];if(field===undefined)
return false;this.resetFieldMarks(id);var cellSelectorLabel=this.settings.target+' td[data-id='+field.row+'_'+field.col+'].gridform_label';var cellSelectorContent=this.settings.target+' td[data-id='+field.row+'_'+field.col+'].gridform_content';if(gridform.types[field.type]!==undefined&&typeof gridform.types[field.type]['set'+type]==="function"){gridform.types[field.type]['set'+type](field,message,cellSelectorLabel,cellSelectorContent,this);}else{if(this.settings.debug)console.log("No set"+type+"-Method for field type "+field.type);}},setSuccess:function(id){this.setStatus(id,"Success");},setWarning:function(id,message){this.setStatus(id,"Warning",message);},setError:function(id,error){this.setStatus(id,"Error",error);},setWaiting:function(id){this.setStatus(id,"Waiting");},resetFieldMarks:function(id){var that=this;function reset(id){var field=that.fieldsById[id];if(field===undefined)
return false;var cellSelectorLabel=that.settings.target+' td[data-id='+field.row+'_'+field.col+'].gridform_label';var cellSelectorContent=that.settings.target+' td[data-id='+field.row+'_'+field.col+'].gridform_content';if(gridform.types[field.type]!==undefined&&typeof gridform.types[field.type]['resetFieldMark']==="function"){gridform.types[field.type]['resetFieldMark'](field,cellSelectorLabel,cellSelectorContent,that);}else{if(this.settings.debug)console.log("No resetFieldMark-Method for field type "+field.type);}};if(id===undefined){for(var x in this.fieldsById){reset(this.fieldsById[x].id);}}else{reset(id);}},flush:function(id){var that=this;function flush(id){that.resetFieldMarks(id);var field=that.fieldsById[id];var type=field.type;if(field===undefined)
return false;var cellSelector=that.settings.target+' td[data-id='+field.row+'_'+field.col+'].gridform_content';if(gridform.types[type]!==undefined&&typeof gridform.types[type]['flush']==="function"){gridform.types[type]['flush'](cellSelector,that);}};if(id===undefined){for(var x in this.fieldsById){flush(this.fieldsById[x].id);}}else{flush(id);}},getData:function(id){var that=this;function get(id){var field=that.fieldsById[id];var type=field.type;if(field===undefined)
return undefined;var cellSelector=that.settings.target+' td[data-id='+field.row+'_'+field.col+'].gridform_content';if(gridform.types[type]!==undefined&&gridform.types[type].containsData===false)
return undefined;if(gridform.types[type]!==undefined&&typeof gridform.types[type]['get']==="function"){return gridform.types[type]['get'](field,cellSelector);}
return undefined;};if(id===undefined){var data={};for(var x in this.fieldsById){var d=get(this.fieldsById[x].id);if(d!==undefined){data[this.fieldsById[x].id]=d;}}
for(var x in this.hiddenFields){data[x]=this.hiddenFields[x];}
return data;}else{if(this.fieldsById[id]!==undefined){return get(id);}else if(this.hiddenFields[id]!==undefined){return this.hiddenFields[id];}else{console.error("No such field "+id);}}},validate:function(id,callback){var that=this;function validate(id,deferred){that.resetFieldMarks(id);var field=that.fieldsById[id];if(field===undefined){deferred.resolve('No field with this id');return false;}
var type=field.type;if(gridform.types[type].containsData!==true){deferred.resolve(true);return false;}
var cellSelector=that.settings.target+' td[data-id='+field.row+'_'+field.col+'].gridform_content';var valid=true;var value=that.getData(field.id);if(field.mandatory===true&&(value===""||value===null||value===undefined||(typeof value==="object"&&value.length===0))){that.setError(id,that.settings.language.mandatoryField);if(that.settings.debug)console.log("Validated: "+field.id+" "+false);deferred.resolve(false);return;}
if(typeof field.validate==="function"){that.setWaiting(field.id);var value=that.getData(id);field.validate(value,function(valid){if($(cellSelector).find("div.form-group").data("status")==="waiting"){that.resetFieldMarks(field.id);if(that.settings.mode==="edit"){that.enable(true,field.id);}}
if(valid===true){that.setSuccess(id);}else{that.setError(id,valid);}
if(that.settings.debug)console.log("Validated: "+field.id+" "+valid);deferred.resolve(valid);});}else{var valid=true;if(gridform.types[type]!==undefined&&typeof gridform.types[type]['validate']==="function"){var valid=gridform.types[type]['validate'](field,cellSelector);}
if(valid!==true){that.setError(id,valid);}else{that.setSuccess(id);}
if(that.settings.debug)console.log("Validated: "+field.id+"  "+valid);deferred.resolve(valid);}};var deferreds=[];if(id===undefined){this.enable(false);for(var x in this.fieldsById){var deferred=$.Deferred();deferreds.push(deferred);validate(this.fieldsById[x].id,deferred);}}else{this.enable(false,id);var deferred=$.Deferred();deferreds.push(deferred);validate(id,deferred);}
$.when.all(deferreds).then(function(objects){var valid=true;for(var x in objects){if(objects[x]!==true)valid=false;}
that.enable(true);$(gridform.forms[that.settings.name]).trigger("validated",false);if(typeof callback=="function"){callback(valid);}});},enable:function(enable,id){if(this.settings.mode!=="edit")
return false;var that=this;function enableField(enable,id){var field=that.fieldsById[id];if(field===undefined)
return false;var type=field.type;var cellSelector=that.settings.target+' td[data-id='+field.row+'_'+field.col+'].gridform_content';if(gridform.types[type]!==undefined&&typeof gridform.types[type]['enable']==="function"){gridform.types[type]['enable'](field,enable,cellSelector);}};if(id===undefined){for(var x in this.fieldsById){enableField(enable,this.fieldsById[x].id);}}else{enableField(enable,id);}},};gridform.types.__mastertype={labelAllowed:true,containsData:true,setLabel:function(data,cellSelectorLabel,parent){var html='<div class="form-group" style="display:inline;">';html+='   <label class="control-label">'+data.label;if(parent.settings.markMandatoryFields===true&&data.mandatory===true){html+=' *';}
html+='</label>';html+='</div>';return html;},render:function(data,cellSelector,parent){return'';},set:function(data,value,cellSelector,parent){},setPlaceholder:function(data,value,cellSelector,parent){return'';},get:function(data,cellSelector){},flush:function(cellSelector,parent){},enable:function(field,enable,cellSelector){},getFieldNode:function(field,cellSelector){},setStatus:function(field,type,cellSelectorLabel,cellSelectorContent,parent){if(type==="success"&&parent.settings.successIsGreen===false){}
else{$(cellSelectorLabel).find("div.form-group").addClass("has-"+type);$(cellSelectorContent).find("div.form-group").addClass("has-"+type);}
$(cellSelectorContent).find("div.form-group").data("status",type);if(field.hasFeedback===true){$(cellSelectorContent).find("span.form-control-feedback").addClass(parent.settings['icon_'+type]).show();}},setError:function(field,error,cellSelectorLabel,cellSelectorContent,parent){this.setStatus(field,'error',cellSelectorLabel,cellSelectorContent,parent);if(typeof $.fn.tooltip==="function"){$(cellSelectorContent).find("div.form-group").attr("data-toggle","tooltip").attr("data-placement",parent.settings.tooltipOrientation).attr("title",error);if(parent.settings.showTooltipInstantly===true){$(cellSelectorContent).find("div.form-group").tooltip("show");}else{$(cellSelectorContent).find("div.form-group").tooltip();}}},setSuccess:function(field,message,cellSelectorLabel,cellSelectorContent,parent){this.setStatus(field,'success',cellSelectorLabel,cellSelectorContent,parent);},setWarning:function(field,message,cellSelectorLabel,cellSelectorContent,parent){this.setStatus(field,'warning',cellSelectorLabel,cellSelectorContent,parent);if(typeof $.fn.tooltip==="function"){$(cellSelectorContent).find("div.form-group").attr("data-toggle","tooltip").attr("data-placement",parent.settings.tooltipOrientation).attr("title",message);if(parent.settings.showTooltipInstantly===true){$(cellSelectorContent).find("div.form-group").tooltip("show");}else{$(cellSelectorContent).find("div.form-group").tooltip();}}},setWaiting:function(field,message,cellSelectorLabel,cellSelectorContent,parent){this.setStatus(field,'waiting',cellSelectorLabel,cellSelectorContent,parent);parent.enable(false,field.id);},resetFieldMark:function(data,cellSelectorLabel,cellSelectorContent,parent){$(cellSelectorLabel).find("div.form-group").removeClass("has-error").removeClass("has-success").removeClass("has-warning");$(cellSelectorContent).find("div.form-group").removeClass("has-error").removeClass("has-success").removeClass("has-warning").data("status","");if(typeof $.fn.tooltip==="function"){$(cellSelectorContent).find("div.form-group").tooltip("destroy");}
if(data.hasFeedback===true){$(cellSelectorContent).find("span.form-control-feedback").removeClass(parent.settings.icon_success).removeClass(parent.settings.icon_error).removeClass(parent.settings.icon_warning).removeClass(parent.settings.icon_waiting);}}};gridform.types.string=$.extend({},gridform.types.__mastertype,{render:function(data,cellSelector,parent){var disabled=(parent.settings.mode==="edit"&&data.readonly!==true)?'':'disabled';var hasFeedback=(data.hasFeedback===true)?'has-feedback':'';var width=(data.width!==undefined)?'width:'+data.width:'';var type=(data.pwd===true)?'password':'text';var placeholder=(data.placeholder!==undefined)?data.placeholder:'';var maxLength=(data.maxLength!==undefined)?'maxlength="'+parseInt(data.maxLength,10)+'"':'';var html='<div class="form-group '+hasFeedback+'" style="'+width+'">';html+='   <input type="'+type+'" '+disabled+' '+maxLength+' class="form-control" style="width:100%;" placeholder="'+placeholder+'"></input>';if(hasFeedback!==""){html+='   <span style="display:none;top:0;" class="'+parent.settings.icon_success+' form-control-feedback"></span>';}
html+='</div>';return html;},set:function(data,value,cellSelector,parent){if(parent.settings.mode==="edit"){$(cellSelector).find("input").val(value);}else{$(cellSelector).find("input").val(value);}},setPlaceholder:function(data,value,cellSelector,parent){$(cellSelector).find("input").attr("placeholder",value);},get:function(data,cellSelector){return $(cellSelector).find("input").val();},getFieldNode:function(field,cellSelector){return $(cellSelector).find("input");},flush:function(cellSelector,parent){$(cellSelector).find("input").val("");},enable:function(data,enable,cellSelector){if(data.readonly===true)
return false;if(enable===true){$(cellSelector).find("input").removeAttr("disabled");}else if(enable===false){$(cellSelector).find("input").attr("disabled","disabled");}}});gridform.types.text=$.extend({},gridform.types.__mastertype,{render:function(data,cellSelector,parent){var disabled=(parent.settings.mode==="edit")?'':'disabled';var hasFeedback=(data.hasFeedback===true)?'has-feedback':'';var width=(data.width!==undefined)?'width:'+data.width:'';var placeholder=(data.placeholder!==undefined)?data.placeholder:'';var html='<div class="form-group '+hasFeedback+'" style="height:100%;'+width+'">';html+='   <textarea type="text" '+disabled+' class="form-control" style="width:100%;height:100%;resize: none;" placeholder="'+placeholder+'"></textarea>';if(hasFeedback!==""){html+='   <span style="display:none;top:0;" class="'+parent.settings.icon_success+' form-control-feedback"></span>';}
html+='</div>';return html;},set:function(data,value,cellSelector,parent){if(parent.settings.mode==="edit"){$(cellSelector).find("textarea").val(value);}else{$(cellSelector).find("textarea").val(value);}},setPlaceholder:function(data,value,cellSelector,parent){$(cellSelector).find("textarea").attr("placeholder",value);},get:function(data,cellSelector){return $(cellSelector).find("textarea").val();},getFieldNode:function(field,cellSelector){return $(cellSelector).find("textarea");},flush:function(cellSelector,parent){$(cellSelector).find("textarea").val("");},enable:function(data,enable,cellSelector){if(data.readonly===true)
return false;if(enable===true){$(cellSelector).find("textarea").removeAttr("disabled");}else if(enable===false){$(cellSelector).find("textarea").attr("disabled","disabled");}},afterDOMCreation:function(data,cellSelector,parent){setTimeout(function(){var height=$(cellSelector).height();$(cellSelector).find("div").height(height);},50);}});gridform.types.select=$.extend({},gridform.types.__mastertype,{render:function(data,cellSelector,parent){var disabled=(parent.settings.mode==="edit")?'':'disabled';var hasFeedback=(data.hasFeedback===true)?'has-feedback':'';var width=(data.width!==undefined)?'width:'+data.width:'';var html='<div class="form-group '+hasFeedback+'" style="'+width+'">';html+='   <select '+disabled+' class="form-control" style="width:100%;"></select>';if(hasFeedback!==""){html+='   <span style="display:none;top:0;" class="'+parent.settings.icon_success+' form-control-feedback"></span>';}
html+='</div>';return html;},set:function(data,value,cellSelector,parent){if(parent.settings.mode==="edit"){$(cellSelector).find("select").val(value);}else{$(cellSelector).find("select").val(value);}},get:function(data,cellSelector){return $(cellSelector).find("select").val();},getFieldNode:function(field,cellSelector){return $(cellSelector).find("select");},flush:function(cellSelector,parent){$(cellSelector).find("select").val("");},enable:function(data,enable,cellSelector){if(data.readonly===true)
return false;if(enable===true){$(cellSelector).find("select").removeAttr("disabled");}else if(enable===false){$(cellSelector).find("select").attr("disabled","disabled");}},afterDOMCreation:function(data,cellSelector,parent){function fillDataInSelect(selection){var elem=$(cellSelector).find("select");elem.html("");if(data.withoutPlaceholder!==true){elem.append('<option value="">'+parent.settings.language.selectPlaceholder+'</option>');}
for(var x in selection){var selected=(data.selected==selection[x].key)?'selected':'';elem.append('<option '+selected+' value="'+selection[x].key+'">'+selection[x].value+'</option>');}
if($(cellSelector).find("div.form-group").data("status")==="waiting"){parent.resetFieldMarks(data.id);if(parent.settings.mode==="edit"){parent.enable(true,data.id);}}};if(data.selection===undefined)
return false;if(typeof data.selection==="function"){parent.setWaiting(data.id);var elem=$(cellSelector).find("select");elem.append('<option value="" selected>'+parent.settings.language.loading+'</option>');data.selection(fillDataInSelect);}else if(typeof(data.selection)==="object"){fillDataInSelect(data.selection);}}});gridform.types.radio=$.extend({},gridform.types.__mastertype,{render:function(data,cellSelector,parent){var width=(data.width!==undefined)?'width:'+data.width:'';var disabled=(parent.settings.mode==="edit")?'':'disabled';var fontA=(parent.settings.useFontAwesome===true)?'fontA':'';var extraStyle=(data.inline===true)?'display:inline-block;padding-right:10px;':'';var html='<div class="form-group">';for(var x in data.selection){var uniqueId=parent.settings.name+'_'+data.id+'_'+x;html+='<div class="radio '+fontA+'" style="'+extraStyle+'">';html+='<input type="radio" class="'+fontA+'" id="'+uniqueId+'" '+disabled+' name="'+data.id+'_radios" value="'+data.selection[x].key+'">';html+='<label class="'+disabled+'" for="'+uniqueId+'">';html+=data.selection[x].value;html+='</label>';html+='</div>';}
html+='</div>';return html;},set:function(data,value,cellSelector,parent){$(cellSelector).find("input[value="+value+"]").prop("checked",true);},get:function(data,cellSelector){return $(cellSelector).find("input:checked").val();},getFieldNode:function(field,cellSelector){return $(cellSelector).find("select");},flush:function(cellSelector,parent){$(cellSelector).find("input").prop("checked",false);},enable:function(data,enable,cellSelector){if(data.readonly===true)
return false;if(enable===true){$(cellSelector).find("input").removeAttr("disabled");$(cellSelector).find("label").removeClass("disabled");}else if(enable===false){$(cellSelector).find("input").attr("disabled","disabled");$(cellSelector).find("label").addClass("disabled");}}});gridform.types.iradio=$.extend({},gridform.types.__mastertype,{render:function(data,cellSelector,parent){var width=(data.width!==undefined)?'width:'+data.width:'';var disabled=(parent.settings.mode==="edit")?'':'disabled';var extraStyle=(data.inline===true)?'display:inline-block;padding-right:10px;':'';var html='<div class="form-group">';for(var x in data.selection){var uniqueId=parent.settings.name+'_'+data.id+'_'+x;html+='<div class="radio fontA" style="'+extraStyle+'">';html+='<input type="radio" class="fontA" id="'+uniqueId+'" '+disabled+' name="'+data.id+'_radios" value="'+data.selection[x].key+'">';html+='<label class="'+disabled+'" for="'+uniqueId+'">';html+=data.selection[x].value;html+='</label>';html+='</div>';}
html+='</div>';return html;},set:function(data,value,cellSelector,parent){$(cellSelector).find("input[value="+value+"]").iCheck("check");},get:function(data,cellSelector){return $(cellSelector).find("input:checked").val();},getFieldNode:function(field,cellSelector){return $(cellSelector).find("input");},flush:function(cellSelector,parent){$(cellSelector).find("input").iCheck("uncheck");},afterDOMCreation:function(data,cellSelector,parent){$(cellSelector).find("input").iCheck({radioClass:'iradio_'+parent.settings.useICheck,});},enable:function(data,enable,cellSelector){if(data.readonly===true)
return false;if(enable===true){$(cellSelector).find("input").iCheck("enable");$(cellSelector).find("label").removeClass("disabled");}else if(enable===false){$(cellSelector).find("input").iCheck("disable");$(cellSelector).find("label").addClass("disabled");}}});gridform.types.checkbox=$.extend({},gridform.types.__mastertype,{render:function(data,cellSelector,parent){var width=(data.width!==undefined)?'width:'+data.width:'';var disabled=(parent.settings.mode==="edit")?'':'disabled';var fontA=(parent.settings.useFontAwesome===true)?'fontA':'';var extraStyle=(data.inline===true)?'display:inline-block;padding-right:10px;':'';var html='<div class="form-group">';for(var x in data.selection){var uniqueId=parent.settings.name+'_'+data.id+'_'+x;html+='<div class="checkbox '+fontA+'" style="'+extraStyle+'">';html+='<input type="checkbox" class="'+fontA+'" id="'+uniqueId+'" '+disabled+' name="'+data.selection[x].key+'" value="'+data.selection[x].key+'"> ';html+='<label class="'+disabled+'" for="'+uniqueId+'">';html+=data.selection[x].value;html+='</label>';html+='</div>';}
html+='</div>';return html;},set:function(data,value,cellSelector,parent){$(cellSelector).find("input").prop("checked",false);if(typeof value==="object"){for(var x in value){$(cellSelector).find("input[name="+value[x]+"]").prop("checked",true);}}else{$(cellSelector).find("input[name='"+value+"']").prop("checked",true);}},get:function(data,cellSelector){var boxes=$(cellSelector).find("input:checked");var data=[];for(var x=0;x<boxes.length;x++){data.push($(boxes[x]).val());}
return data;},getFieldNode:function(field,cellSelector){return $(cellSelector).find("select");},flush:function(cellSelector,parent){$(cellSelector).find("input").prop("checked",false);},enable:function(data,enable,cellSelector){if(data.readonly===true)
return false;if(enable===true){$(cellSelector).find("input").removeAttr("disabled");$(cellSelector).find("label").removeClass("disabled");}else if(enable===false){$(cellSelector).find("input").attr("disabled","disabled");$(cellSelector).find("label").addClass("disabled");}}});gridform.types.icheckbox=$.extend({},gridform.types.__mastertype,{render:function(data,cellSelector,parent){var width=(data.width!==undefined)?'width:'+data.width:'';var disabled=(parent.settings.mode==="edit")?'':'disabled';var extraStyle=(data.inline===true)?'display:inline-block;padding-right:10px;':'';var html='<div class="form-group">';for(var x in data.selection){var uniqueId=parent.settings.name+'_'+data.id+'_'+x;html+='<div class="checkbox fontA" style="'+extraStyle+'">';html+='<input type="checkbox" class="fontA" id="'+uniqueId+'" '+disabled+' name="'+data.selection[x].key+'" value="'+data.selection[x].key+'"> ';html+='<label class="'+disabled+'" for="'+uniqueId+'">';html+=data.selection[x].value;html+='</label>';html+='</div>';}
html+='</div>';return html;},set:function(data,value,cellSelector,parent){$(cellSelector).find("input").iCheck("uncheck");if(typeof value==="object"){for(var x in value){$(cellSelector).find("input[name="+value[x]+"]").iCheck("check");}}else{$(cellSelector).find("input[name='"+value+"']").iCheck("check");}},get:function(data,cellSelector){var boxes=$(cellSelector).find("input:checked");var data=[];for(var x=0;x<boxes.length;x++){data.push($(boxes[x]).val());}
return data;},getFieldNode:function(field,cellSelector){return $(cellSelector).find("input");},flush:function(cellSelector,parent){$(cellSelector).find("input").iCheck("uncheck");},afterDOMCreation:function(data,cellSelector,parent){$(cellSelector).find("input").iCheck({checkboxClass:'icheckbox_'+parent.settings.useICheck,});},enable:function(data,enable,cellSelector){if(data.readonly===true)
return false;if(enable===true){$(cellSelector).find("input").iCheck('enable');$(cellSelector).find("label").removeClass("disabled");}else if(enable===false){$(cellSelector).find("input").iCheck('disable');$(cellSelector).find("label").addClass("disabled");}}});gridform.types.boolean=$.extend({},gridform.types.__mastertype,{render:function(data,cellSelector,parent){var width=(data.width!==undefined)?'width:'+data.width:'';var disabled=(parent.settings.mode==="edit")?'':'disabled';var fontA=(parent.settings.useFontAwesome===true)?'fontA':'';var html='<div class="form-group">';var uniqueId=parent.settings.name+'_'+data.id;html+='<div class="checkbox '+fontA+'">';html+='<input type="checkbox" class="'+fontA+'" id="'+uniqueId+'" '+disabled+' name="" value="1"> <label for="'+uniqueId+'">&nbsp;</label>';html+='</div>';html+='</div>';return html;},set:function(data,value,cellSelector,parent){$(cellSelector).find("input").prop("checked",false);if(value===true){$(cellSelector).find("input").prop("checked",true);}else{$(cellSelector).find("input").prop("checked",false);}},get:function(data,cellSelector){var boxes=$(cellSelector).find("input:checked");if(boxes.length>0){return true;}else{return false;}},getFieldNode:function(field,cellSelector){return $(cellSelector).find("input");},flush:function(cellSelector,parent){$(cellSelector).find("input").prop("checked",false);},enable:function(data,enable,cellSelector){if(data.readonly===true)
return false;if(enable===true){$(cellSelector).find("input").removeAttr("disabled");}else if(enable===false){$(cellSelector).find("input").attr("disabled","disabled");}}});gridform.types.iboolean=$.extend({},gridform.types.__mastertype,{render:function(data,cellSelector,parent){var width=(data.width!==undefined)?'width:'+data.width:'';var disabled=(parent.settings.mode==="edit")?'':'disabled';var html='<div class="form-group">';var uniqueId=parent.settings.name+'_'+data.id;html+='<div class="checkbox fontA">';html+='<input type="checkbox" class="fontA" id="'+uniqueId+'" '+disabled+' name="" value="1"> <label for="'+uniqueId+'">&nbsp;</label>';html+='</div>';html+='</div>';return html;},set:function(data,value,cellSelector,parent){if(value===true){$(cellSelector).find("input").iCheck("check");}else{$(cellSelector).find("input").iCheck("uncheck");}},get:function(data,cellSelector){var boxes=$(cellSelector).find("input:checked");if(boxes.length>0){return true;}else{return false;}},getFieldNode:function(field,cellSelector){return $(cellSelector).find("input");},flush:function(cellSelector,parent){$(cellSelector).find("input").iCheck("uncheck");},afterDOMCreation:function(data,cellSelector,parent){$(cellSelector).find("input").iCheck({checkboxClass:'icheckbox_'+parent.settings.useICheck,});},enable:function(data,enable,cellSelector){if(data.readonly===true)
return false;if(enable===true){$(cellSelector).find("input").iCheck("enable");}else if(enable===false){$(cellSelector).find("input").iCheck("disable");}}});gridform.types.headline=$.extend({},gridform.types.__mastertype,{labelAllowed:false,containsData:false,render:function(data,cellSelector,parent){var html='<div class="headline">'+data.label+'</div>';return html;}});gridform.types.separator=$.extend({},gridform.types.__mastertype,{labelAllowed:false,containsData:false,render:function(data,cellSelector,parent){var html='<div class="separator"></div>';return html;}});gridform.addType=function(type,object,originalType){if(originalType!==undefined&&gridform.types[originalType]!==undefined){originalType=gridform.types[originalType];}else{originalType={};}
gridform.types[type]=$.extend({},gridform.types.__mastertype,originalType,object);};gridform.setDefaults=function(settings){gridform.form.prototype.defaultSettings=$.extend({},gridform.form.prototype.defaultSettings,settings);};$.fn.gridform=function(settings){if(gridform.forms[settings.name]!==undefined){console.error("A form with the name '"+settings.name+"' already exists!");}
var obj=new gridform.form(settings);if(obj===false)return false;if($(this).length===1)obj.render(this);if(settings.name!==undefined){gridform.forms[settings.name]=obj;}
return obj;};}(jQuery));